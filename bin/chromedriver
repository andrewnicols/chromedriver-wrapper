#!/bin/bash
set -e

# This is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

echo "============================================================================"
echo "== Chromedriver wrapper"
echo "=="
echo "== Copyright 2019 Andrew Nicols <andrew@nicols.co.uk>"
echo "== License GNU GPL v3"
echo "============================================================================"

pushd `dirname $0` > /dev/null
SCRIPTPATH=`pwd`
popd > /dev/null

ARCH=`uname -m`

CONFPATH=`dirname "${SCRIPTPATH}"`/chromedriver.conf
echo -n "= Looking for configuration in '${CONFPATH}'... "
if [ -f "${CONFPATH}" ]
then
  echo "found! Loading"
  source "${CONFPATH}"
else
  echo "not found."
fi

realpath() {
    [[ $1 = /* ]] && echo "$1" || echo "$PWD/${1#./}"
}

# Defaults:
EXTRA_OPTIONS="${EXTRA_OPTIONS:-}"
PATH_TO_CACHEDIR="${PATH_TO_CACHEDIR:-$( cd "$( dirname $( dirname $( realpath "${BASH_SOURCE[0]}" ) ) )" >/dev/null 2>&1 && pwd )/cache}"
PATH_TO_CHROME="${PATH_TO_CHROME:-}"
CHROMEDRIVER_SOURCE_FILENAME="${CHROMEDRIVER_SOURCE_FILENAME:-}"
CHROMEDRIVER_SOURCE_BASE="${CHROMEDRIVER_SOURCE_BASE:-https://chromedriver.storage.googleapis.com}"

echo "= Cache directory: ${PATH_TO_CACHEDIR}"
mkdir -p "${PATH_TO_CACHEDIR}"

OS=`uname -s`
if [ "${OS}" = "Linux" ]
then
  # Use the standard chrome release.
  PATH_TO_CHROME="${PATH_TO_CHROME:-`which google-chrome-stable`}"
elif [ "${OS}" = "Darwin" ]
then
  PATH_TO_CHROME="${PATH_TO_CHROME:-/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome}"
else
  echo "! Unable to determine host OS from uname '${OS}'"
  echo "! Please submit a pull-request with your fix to https://github.com/andrewnicols/chromedriver-wrapper"
  exit 1
fi
echo "= Operating system detected as ${OS}"
echo "= Chrome path guessed as ${PATH_TO_CHROME}"

validchrome=`bash -c "test -x ${PATH_TO_CHROME}"`
if [ $? -ne 0 ]
then
  echo "! Unable to determine a valid location for the Chrome executable"
  echo "! Please submit a pull-request with your fix to https://github.com/andrewnicols/chromedriver-wrapper"
  exit 1
fi
echo "= Chrome found in ${PATH_TO_CHROME}"

# Find the version of Chrome.
CHROME_VERSION=`bash -c "${PATH_TO_CHROME} --version" | awk '{print $NF}' | sed 's/\.[0-9]*$//'`
echo "= The version of Chrome currently installed is ${CHROME_VERSION}"

# Check whether we already have a copy of chromedriver for this 
PATH_TO_CHROMEDRIVER="${PATH_TO_CACHEDIR}/chromedriver_${CHROME_VERSION}_${ARCH}"

echo -n "= Looking for existing copy of chromedriver in '${PATH_TO_CHROMEDRIVER}'... "
if [ -f "${PATH_TO_CHROMEDRIVER}" ]
then
  echo "found"
  echo "== Using cached copy"
else
  echo "not found"
  echo "== Finding out the latest release of chromedriver for Chrome ${CHROME_VERSION}"
  CHROMEDRIVER_VERSION=`curl "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_${CHROME_VERSION}"`
  echo "== The relevant chromedriver version is '${CHROMEDRIVER_VERSION}'"

  if [ "${OS}" = "Linux" ]
  then
    # Use the standard chrome release.
    echo "== Using linux64 Variant"
    CHROMEDRIVER_SOURCE_FILENAME="${CHROMEDRIVER_SOURCE_FILENAME:-chromedriver_linux64.zip}"
  elif [ "${OS}" = "Darwin" ]
  then
    if [ $( uname -m ) = "arm64" ]
    then
      echo "============================================================================"
      echo "============================================================================"
      # The ARM64 version of Chromedriver moved to a new filename from version 106.0.5249.61
      # https://groups.google.com/g/chromedriver-users/c/JRuQzH3qr2c/m/ObvcmOpVAwAJ
      if [ $( echo ${CHROMEDRIVER_VERSION} | sed 's/^\([0-9]*\)\..*$/\1/' ) -lt 106 ]
      then
        echo "== Using M1 Variant"
        CHROMEDRIVER_SOURCE_FILENAME="${CHROMEDRIVER_SOURCE_FILENAME:-chromedriver_mac64_m1.zip}"
      else
        echo "== Using ARM64 Variant"
        CHROMEDRIVER_SOURCE_FILENAME="${CHROMEDRIVER_SOURCE_FILENAME:-chromedriver_mac_arm64.zip}"
      fi
    else
      echo "== Using mac64 Variant"
      CHROMEDRIVER_SOURCE_FILENAME="${CHROMEDRIVER_SOURCE_FILENAME:-chromedriver_mac64.zip}"
    fi
  fi

  CHROMEDRIVER_SOURCE="${CHROMEDRIVER_SOURCE_BASE}/${CHROMEDRIVER_VERSION}/${CHROMEDRIVER_SOURCE_FILENAME}"
  CHROMEDRIVER_NOTES="${CHROMEDRIVER_SOURCE_BASE}/${CHROMEDRIVER_VERSION}/notes.txt"

  TMPDIR=`mktemp -d`
  cd "${TMPDIR}"
  echo "== Downloading from ${CHROMEDRIVER_SOURCE}"
  curl -s -o "${TMPDIR}/chromedriver.zip" "${CHROMEDRIVER_SOURCE}"
  curl -s -o "${TMPDIR}/notes.txt" "${CHROMEDRIVER_NOTES}"

  echo "== Unzipping and moving into place"
  unzip "${TMPDIR}/chromedriver" -d chromedriver
  mv chromedriver/chromedriver "${PATH_TO_CHROMEDRIVER}"
  mv notes.txt "${PATH_TO_CHROMEDRIVER}_notes.txt"
  cd -
  rm -rf "{$TMPDIR}"
fi

if [ -f "${PATH_TO_CHROMEDRIVER}_notes.txt" ]
then
  echo "== Displaying release notes:"
  echo "============================================================================"
  cat "${PATH_TO_CHROMEDRIVER}_notes.txt"
  echo "============================================================================"
fi

echo "= Running ${PATH_TO_CHROMEDRIVER} ${EXTRA_OPTIONS} ${*}"
echo "============================================================================"
bash -c "${PATH_TO_CHROMEDRIVER} ${EXTRA_OPTIONS} ${*}"
